syntax = "proto3";

package amadeus.type;

// msgCode: 0050
message FlightLowFareSearchResponse {
    repeated Data data = 1;
    Dictionaries dictionaries = 2;
    Meta meta = 3;
}

// msgCode: 0051
message Data {
    string id = 1;
    string type = 2;
    repeated OfferItem offerItems = 3;
}

// msgCode: 0052
message OfferItem {
    repeated Service services = 1;
    Price price = 2;
    Price pricePerAdult = 3;
}

// msgCode: 0053
message Service {
    repeated Segment segments = 1;
}

// msgCode: 0054
message Segment {
    FlightSegment flightSegment = 1;
    PricingDetailPerAdult pricingDetailPerAdult = 2;
}

// msgCode: 0055
message FlightSegment {
    DepartureArrival departure = 1;
    DepartureArrival arrival = 2;
    string carrierCode = 3;
    string number = 4;
    Aircraft aircraft = 5;
    Operating operating = 6;
    string duration = 7;
}

// msgCode: 0056
message DepartureArrival {
    string iataCode = 1;
    string terminal = 2;
    string at = 3;
}

// msgCode: 0057
message Aircraft {
    string code = 1;
}

// msgCode: 0058
message Operating {
    string carrierCode = 3;
    string number = 4;
}

// msgCode: 0059
message PricingDetailPerAdult {
    string travelClass = 1;
    string fareClass = 2;
    int32 availability = 3;
    string fareBasis = 4;
}

// msgCode: 0060
message Price {
    string total = 1;
    string totalTaxes = 2;
}

// msgCode: 0061
message Dictionaries {
    // you MAY need to change this, but unnecessary at the moment I assume
    map<string, string> carriers = 1;
    map<string, string> currencies = 2;
    map<string, string> aircrafts = 3;
    map<string, LocationDetail> locations = 4;
}

// msgCode: 0062
message Carrier {
    map<string, string>  carrier = 1;
}

// msgCode: 0063
message Currency {
    map<string, string>  currency = 1;
}

// msgCode: 0064
message DictionariesAircraft {
    map<string, string>  aircraft = 1;
}

// msgCode: 0065
message Location {
    map<string, LocationDetail>  location = 1;
}

// msgCode: 0066
message LocationDetail {
    map<string, string>  detail = 1;
}

// msgCode: 0067
message Meta {
    Links links = 1;
    string currency = 2;
    Defaults defaults = 3;
    int32 count = 4;
}

// msgCode: 0068
message Links {
    string self = 1;
}

// msgCode: 0069
message Defaults {
    bool nonStop = 1;
    int32 adults = 2;
    string departureDate = 3;
    bool oneWay = 4;
    string duration = 5;
    string viewBy = 6;
}

// msgCode: 0070
message FlightInspirationSearchResponse {
    repeated InspirationData data = 1;
    Dictionaries dictionaries = 2;
    Meta meta = 3;
}

// msgCode: 0071
message InspirationData {
    string type = 1;
    string origin = 2;
    string destination = 3;
    string departureDate = 4;
    string returnDate = 5;
    Price price = 6;
    InspirationLinks links = 7;
}

// msgCode: 0072
message InspirationLinks {
    string flightDates = 1;
    string flightOffers = 2;
}

// msgCode: 0073
message FlightMostTraveledDestinationsResponse {
    Meta meta = 1;
    repeated MostTraveledData data = 2;
}

// msgCode: 0074
message MostTraveledData {
    string type = 1;
    string destination = 2;
    string subType = 3;
    string period = 4;
    Analytics analytics = 5;
}

// msgCode: 0075
message Analytics {
    Score flights = 1;
    Score travelers = 2;
}

// msgCode: 0076
message Score {
    int32 score = 1;
}

// msgCode: 0077
message FlightMostBookedDestinationsResponse {
    Meta meta = 1;
    repeated MostTraveledData data = 2;
}

// msgCode: 0078
message FlightBusiestTravelingPeriodResponse {
    Meta meta = 1;
    repeated MostTraveledData data = 2;
}

